{
  "ABIRoot": {
    "kind": "Root",
    "name": "Bayun",
    "printedName": "Bayun",
    "children": [
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Bayun"
      },
      {
        "kind": "TypeDecl",
        "name": "GF256",
        "printedName": "GF256",
        "children": [
          {
            "kind": "Var",
            "name": "byte",
            "printedName": "byte",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun5GF256V4bytes5UInt8Vvp",
            "mangledName": "$s5Bayun5GF256V4bytes5UInt8Vvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "HasStorage"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5GF256V4bytes5UInt8Vvg",
                "mangledName": "$s5Bayun5GF256V4bytes5UInt8Vvg",
                "moduleName": "Bayun",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5Bayun5GF256VyACs5UInt8Vcfc",
            "mangledName": "$s5Bayun5GF256VyACs5UInt8Vcfc",
            "moduleName": "Bayun",
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "debugDescription",
            "printedName": "debugDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun5GF256V16debugDescriptionSSvp",
            "mangledName": "$s5Bayun5GF256V16debugDescriptionSSvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5GF256V16debugDescriptionSSvg",
                "mangledName": "$s5Bayun5GF256V16debugDescriptionSSvg",
                "moduleName": "Bayun",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "zero",
            "printedName": "zero",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun5GF256V4zeroACvpZ",
            "mangledName": "$s5Bayun5GF256V4zeroACvpZ",
            "moduleName": "Bayun",
            "static": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GF256",
                    "printedName": "Bayun.GF256",
                    "usr": "s:5Bayun5GF256V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5GF256V4zeroACvgZ",
                "mangledName": "$s5Bayun5GF256V4zeroACvgZ",
                "moduleName": "Bayun",
                "static": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "Errors",
            "printedName": "Errors",
            "children": [
              {
                "kind": "Var",
                "name": "missingExponent",
                "printedName": "missingExponent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Bayun.GF256.Errors.Type) -> (Swift.Int) -> Bayun.GF256.Errors",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.Int) -> Bayun.GF256.Errors",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Errors",
                            "printedName": "Bayun.GF256.Errors",
                            "usr": "s:5Bayun5GF256V6ErrorsO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "Bayun.GF256.Errors.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Errors",
                            "printedName": "Bayun.GF256.Errors",
                            "usr": "s:5Bayun5GF256V6ErrorsO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5Bayun5GF256V6ErrorsO15missingExponentyAESicAEmF",
                "mangledName": "$s5Bayun5GF256V6ErrorsO15missingExponentyAESicAEmF",
                "moduleName": "Bayun"
              },
              {
                "kind": "Var",
                "name": "missingLogarithm",
                "printedName": "missingLogarithm",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Bayun.GF256.Errors.Type) -> (Swift.Int) -> Bayun.GF256.Errors",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.Int) -> Bayun.GF256.Errors",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Errors",
                            "printedName": "Bayun.GF256.Errors",
                            "usr": "s:5Bayun5GF256V6ErrorsO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "Bayun.GF256.Errors.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Errors",
                            "printedName": "Bayun.GF256.Errors",
                            "usr": "s:5Bayun5GF256V6ErrorsO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5Bayun5GF256V6ErrorsO16missingLogarithmyAESicAEmF",
                "mangledName": "$s5Bayun5GF256V6ErrorsO16missingLogarithmyAESicAEmF",
                "moduleName": "Bayun"
              },
              {
                "kind": "Var",
                "name": "divideByZero",
                "printedName": "divideByZero",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Bayun.GF256.Errors.Type) -> Bayun.GF256.Errors",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.GF256.Errors",
                        "usr": "s:5Bayun5GF256V6ErrorsO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "Bayun.GF256.Errors.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Errors",
                            "printedName": "Bayun.GF256.Errors",
                            "usr": "s:5Bayun5GF256V6ErrorsO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5Bayun5GF256V6ErrorsO12divideByZeroyA2EmF",
                "mangledName": "$s5Bayun5GF256V6ErrorsO12divideByZeroyA2EmF",
                "moduleName": "Bayun"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5Bayun5GF256V6ErrorsO",
            "mangledName": "$s5Bayun5GF256V6ErrorsO",
            "moduleName": "Bayun",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Copyable",
                "printedName": "Copyable",
                "usr": "s:s8CopyableP",
                "mangledName": "$ss8CopyableP"
              },
              {
                "kind": "Conformance",
                "name": "Escapable",
                "printedName": "Escapable",
                "usr": "s:s9EscapableP",
                "mangledName": "$ss9EscapableP"
              },
              {
                "kind": "Conformance",
                "name": "Error",
                "printedName": "Error",
                "usr": "s:s5ErrorP",
                "mangledName": "$ss5ErrorP"
              },
              {
                "kind": "Conformance",
                "name": "Sendable",
                "printedName": "Sendable",
                "usr": "s:s8SendableP",
                "mangledName": "$ss8SendableP"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "exp",
            "printedName": "exp(of:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun5GF256V3exp2ofA2C_tKFZ",
            "mangledName": "$s5Bayun5GF256V3exp2ofA2C_tKFZ",
            "moduleName": "Bayun",
            "static": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "expTable",
            "printedName": "expTable",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun5GF256V8expTableSays5UInt8VGvpZ",
            "mangledName": "$s5Bayun5GF256V8expTableSays5UInt8VGvpZ",
            "moduleName": "Bayun",
            "static": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt8]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt8",
                        "printedName": "Swift.UInt8",
                        "usr": "s:s5UInt8V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5GF256V8expTableSays5UInt8VGvgZ",
                "mangledName": "$s5Bayun5GF256V8expTableSays5UInt8VGvgZ",
                "moduleName": "Bayun",
                "static": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "log",
            "printedName": "log(of:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun5GF256V3log2ofA2C_tKFZ",
            "mangledName": "$s5Bayun5GF256V3log2ofA2C_tKFZ",
            "moduleName": "Bayun",
            "static": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "logTable",
            "printedName": "logTable",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun5GF256V8logTableSays5UInt8VGvpZ",
            "mangledName": "$s5Bayun5GF256V8logTableSays5UInt8VGvpZ",
            "moduleName": "Bayun",
            "static": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt8]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt8",
                        "printedName": "Swift.UInt8",
                        "usr": "s:s5UInt8V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5GF256V8logTableSays5UInt8VGvgZ",
                "mangledName": "$s5Bayun5GF256V8logTableSays5UInt8VGvgZ",
                "moduleName": "Bayun",
                "static": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:5Bayun5GF256V",
        "mangledName": "$s5Bayun5GF256V",
        "moduleName": "Bayun",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "-",
        "printedName": "-(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun1soiyAA5GF256VAD_ADtKF",
        "mangledName": "$s5Bayun1soiyAA5GF256VAD_ADtKF",
        "moduleName": "Bayun",
        "declAttributes": [
          "RawDocComment"
        ],
        "throwing": true,
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "+",
        "printedName": "+(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun1poiyAA5GF256VAD_ADtKF",
        "mangledName": "$s5Bayun1poiyAA5GF256VAD_ADtKF",
        "moduleName": "Bayun",
        "throwing": true,
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "*",
        "printedName": "*(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun1moiyAA5GF256VAD_ADtKF",
        "mangledName": "$s5Bayun1moiyAA5GF256VAD_ADtKF",
        "moduleName": "Bayun",
        "throwing": true,
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "\/",
        "printedName": "\/(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun1doiyAA5GF256VAD_ADtKF",
        "mangledName": "$s5Bayun1doiyAA5GF256VAD_ADtKF",
        "moduleName": "Bayun",
        "throwing": true,
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          },
          {
            "kind": "TypeNominal",
            "name": "GF256",
            "printedName": "Bayun.GF256",
            "usr": "s:5Bayun5GF256V"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun2eeoiySbAA5GF256V_ADtF",
        "mangledName": "$s5Bayun2eeoiySbAA5GF256V_ADtF",
        "moduleName": "Bayun",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Bayun"
      },
      {
        "kind": "TypeDecl",
        "name": "PolyGF256",
        "printedName": "PolyGF256",
        "children": [
          {
            "kind": "Var",
            "name": "coefficients",
            "printedName": "coefficients",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Bayun.GF256]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GF256",
                    "printedName": "Bayun.GF256",
                    "usr": "s:5Bayun5GF256V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun9PolyGF256C12coefficientsSayAA0C0VGvp",
            "mangledName": "$s5Bayun9PolyGF256C12coefficientsSayAA0C0VGvp",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "HasStorage"
            ],
            "fixedbinaryorder": 0,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Bayun.GF256]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GF256",
                        "printedName": "Bayun.GF256",
                        "usr": "s:5Bayun5GF256V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C12coefficientsSayAA0C0VGvg",
                "mangledName": "$s5Bayun9PolyGF256C12coefficientsSayAA0C0VGvg",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "declAttributes": [
                  "Transparent"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Bayun.GF256]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GF256",
                        "printedName": "Bayun.GF256",
                        "usr": "s:5Bayun5GF256V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C12coefficientsSayAA0C0VGvs",
                "mangledName": "$s5Bayun9PolyGF256C12coefficientsSayAA0C0VGvs",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "declAttributes": [
                  "Transparent"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C12coefficientsSayAA0C0VGvM",
                "mangledName": "$s5Bayun9PolyGF256C12coefficientsSayAA0C0VGvM",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "declAttributes": [
                  "Transparent"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "degree",
            "printedName": "degree",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun9PolyGF256C6degreeSivp",
            "mangledName": "$s5Bayun9PolyGF256C6degreeSivp",
            "moduleName": "Bayun",
            "isOpen": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C6degreeSivg",
                "mangledName": "$s5Bayun9PolyGF256C6degreeSivg",
                "moduleName": "Bayun",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "length",
            "printedName": "length",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun9PolyGF256C6lengthSivp",
            "mangledName": "$s5Bayun9PolyGF256C6lengthSivp",
            "moduleName": "Bayun",
            "isOpen": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C6lengthSivg",
                "mangledName": "$s5Bayun9PolyGF256C6lengthSivg",
                "moduleName": "Bayun",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(coefficients:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PolyGF256",
                "printedName": "Bayun.PolyGF256",
                "usr": "s:5Bayun9PolyGF256C"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Bayun.GF256]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GF256",
                    "printedName": "Bayun.GF256",
                    "usr": "s:5Bayun5GF256V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5Bayun9PolyGF256C12coefficientsACSayAA0C0VG_tcfc",
            "mangledName": "$s5Bayun9PolyGF256C12coefficientsACSayAA0C0VG_tcfc",
            "moduleName": "Bayun",
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bytes:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PolyGF256",
                "printedName": "Bayun.PolyGF256",
                "usr": "s:5Bayun9PolyGF256C"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5Bayun9PolyGF256C5bytesACSays5UInt8VG_tcfc",
            "mangledName": "$s5Bayun9PolyGF256C5bytesACSays5UInt8VG_tcfc",
            "moduleName": "Bayun",
            "declAttributes": [
              "Convenience"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Function",
            "name": "random",
            "printedName": "random(zeroAt:degree:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "PolyGF256",
                "printedName": "Bayun.PolyGF256",
                "usr": "s:5Bayun9PolyGF256C"
              },
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun9PolyGF256C6random6zeroAt6degreeAcA0C0V_SitKFZ",
            "mangledName": "$s5Bayun9PolyGF256C6random6zeroAt6degreeAcA0C0V_SitKFZ",
            "moduleName": "Bayun",
            "static": true,
            "declAttributes": [
              "Final",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "evaluate",
            "printedName": "evaluate(at:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun9PolyGF256C8evaluate2atAA0C0VAG_tKF",
            "mangledName": "$s5Bayun9PolyGF256C8evaluate2atAA0C0VAG_tKF",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "interpolate",
            "printedName": "interpolate(points:at:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[(x: Bayun.GF256, y: Bayun.GF256)]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(x: Bayun.GF256, y: Bayun.GF256)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GF256",
                        "printedName": "Bayun.GF256",
                        "usr": "s:5Bayun5GF256V"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "GF256",
                        "printedName": "Bayun.GF256",
                        "usr": "s:5Bayun5GF256V"
                      }
                    ]
                  }
                ],
                "usr": "s:Sa"
              },
              {
                "kind": "TypeNominal",
                "name": "GF256",
                "printedName": "Bayun.GF256",
                "usr": "s:5Bayun5GF256V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun9PolyGF256C11interpolate6points2atAA0C0VSayAH1x_AH1ytG_AHtKFZ",
            "mangledName": "$s5Bayun9PolyGF256C11interpolate6points2atAA0C0VSayAH1x_AH1ytG_AHtKFZ",
            "moduleName": "Bayun",
            "static": true,
            "declAttributes": [
              "Final",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "debugDescription",
            "printedName": "debugDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun9PolyGF256C16debugDescriptionSSvp",
            "mangledName": "$s5Bayun9PolyGF256C16debugDescriptionSSvp",
            "moduleName": "Bayun",
            "isOpen": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun9PolyGF256C16debugDescriptionSSvg",
                "mangledName": "$s5Bayun9PolyGF256C16debugDescriptionSSvg",
                "moduleName": "Bayun",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5Bayun9PolyGF256C",
        "mangledName": "$s5Bayun9PolyGF256C",
        "moduleName": "Bayun",
        "isOpen": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "PolyGF256",
            "printedName": "Bayun.PolyGF256",
            "usr": "s:5Bayun9PolyGF256C"
          },
          {
            "kind": "TypeNominal",
            "name": "PolyGF256",
            "printedName": "Bayun.PolyGF256",
            "usr": "s:5Bayun9PolyGF256C"
          }
        ],
        "declKind": "Func",
        "usr": "s:5Bayun2eeoiySbAA9PolyGF256C_ADtF",
        "mangledName": "$s5Bayun2eeoiySbAA9PolyGF256C_ADtF",
        "moduleName": "Bayun",
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Bayun",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "Bayun"
      },
      {
        "kind": "TypeDecl",
        "name": "Secret",
        "printedName": "Secret",
        "children": [
          {
            "kind": "Var",
            "name": "shares",
            "printedName": "shares",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Secret(py)shares",
            "mangledName": "$s5Bayun6SecretC6sharess5UInt8Vvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Secret(im)shares",
                "mangledName": "$s5Bayun6SecretC6sharess5UInt8Vvg",
                "moduleName": "Bayun",
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "threshold",
            "printedName": "threshold",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Secret(py)threshold",
            "mangledName": "$s5Bayun6SecretC9thresholds5UInt8Vvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Secret(im)threshold",
                "mangledName": "$s5Bayun6SecretC9thresholds5UInt8Vvg",
                "moduleName": "Bayun",
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "data",
            "printedName": "data",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Secret(py)data",
            "mangledName": "$s5Bayun6SecretC4data10Foundation4DataVvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Secret(im)data",
                "mangledName": "$s5Bayun6SecretC4data10Foundation4DataVvg",
                "moduleName": "Bayun",
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(data:threshold:shares:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Secret",
                "printedName": "Bayun.Secret",
                "usr": "c:@M@Bayun@objc(cs)Secret"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Bayun@objc(cs)Secret(im)initWithData:threshold:shares:error:",
            "mangledName": "$s5Bayun6SecretC4data9threshold6sharesAC10Foundation4DataV_S2itKcfc",
            "moduleName": "Bayun",
            "declAttributes": [
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "split",
            "printedName": "split()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Bayun.Share]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Share",
                    "printedName": "Bayun.Share",
                    "usr": "c:@M@Bayun@objc(cs)Share"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Bayun@objc(cs)Secret(im)splitAndReturnError:",
            "mangledName": "$s5Bayun6SecretC5splitSayAA5ShareCGyKF",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "combine",
            "printedName": "combine(shares:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Bayun.Share]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Share",
                    "printedName": "Bayun.Share",
                    "usr": "c:@M@Bayun@objc(cs)Share"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@Bayun@objc(cs)Secret(im)combineWithShares:error:",
            "mangledName": "$s5Bayun6SecretC7combine6shares10Foundation4DataVSayAA5ShareCG_tKF",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment",
              "ObjC"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Secret",
                "printedName": "Bayun.Secret",
                "usr": "c:@M@Bayun@objc(cs)Secret"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Bayun@objc(cs)Secret(im)init",
            "mangledName": "$s5Bayun6SecretCACycfc",
            "moduleName": "Bayun",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Bayun@objc(cs)Secret",
        "mangledName": "$s5Bayun6SecretC",
        "moduleName": "Bayun",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "ObjCMembers",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "Bayun",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Bayun"
      },
      {
        "kind": "TypeDecl",
        "name": "Errors",
        "printedName": "Errors",
        "children": [
          {
            "kind": "Var",
            "name": "unsupportedLength",
            "printedName": "unsupportedLength",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO17unsupportedLengthyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO17unsupportedLengthyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Var",
            "name": "thresholdLargerThanShares",
            "printedName": "thresholdLargerThanShares",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO25thresholdLargerThanSharesyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO25thresholdLargerThanSharesyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Var",
            "name": "thresholdTooLow",
            "printedName": "thresholdTooLow",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO15thresholdTooLowyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO15thresholdTooLowyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Var",
            "name": "splitOnZero",
            "printedName": "splitOnZero",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO11splitOnZeroyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO11splitOnZeroyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Var",
            "name": "shareDataLengthMismatch",
            "printedName": "shareDataLengthMismatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO23shareDataLengthMismatchyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO23shareDataLengthMismatchyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Var",
            "name": "shareDataTooShort",
            "printedName": "shareDataTooShort",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.Errors.Type) -> Bayun.Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Errors",
                    "printedName": "Bayun.Errors",
                    "usr": "s:5Bayun6ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Errors",
                        "printedName": "Bayun.Errors",
                        "usr": "s:5Bayun6ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun6ErrorsO17shareDataTooShortyA2CmF",
            "mangledName": "$s5Bayun6ErrorsO17shareDataTooShortyA2CmF",
            "moduleName": "Bayun"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Errors",
                "printedName": "Bayun.Errors",
                "usr": "s:5Bayun6ErrorsO"
              },
              {
                "kind": "TypeNominal",
                "name": "Errors",
                "printedName": "Bayun.Errors",
                "usr": "s:5Bayun6ErrorsO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun6ErrorsO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5Bayun6ErrorsO2eeoiySbAC_ACtFZ",
            "moduleName": "Bayun",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5Bayun6ErrorsO9hashValueSivp",
            "mangledName": "$s5Bayun6ErrorsO9hashValueSivp",
            "moduleName": "Bayun",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun6ErrorsO9hashValueSivg",
                "mangledName": "$s5Bayun6ErrorsO9hashValueSivg",
                "moduleName": "Bayun",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5Bayun6ErrorsO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5Bayun6ErrorsO4hash4intoys6HasherVz_tF",
            "moduleName": "Bayun",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5Bayun6ErrorsO",
        "mangledName": "$s5Bayun6ErrorsO",
        "moduleName": "Bayun",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Share",
        "printedName": "Share",
        "children": [
          {
            "kind": "Var",
            "name": "point",
            "printedName": "point",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Share(py)point",
            "mangledName": "$s5Bayun5ShareC5points5UInt8Vvp",
            "moduleName": "Bayun",
            "declAttributes": [
              "Final",
              "HasStorage",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Share(im)point",
                "mangledName": "$s5Bayun5ShareC5points5UInt8Vvg",
                "moduleName": "Bayun",
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "bytes",
            "printedName": "bytes",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Share(py)bytes",
            "mangledName": "$s5Bayun5ShareC5bytesSays5UInt8VGvp",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "ObjC"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt8]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt8",
                        "printedName": "Swift.UInt8",
                        "usr": "s:s5UInt8V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Share(im)bytes",
                "mangledName": "$s5Bayun5ShareC5bytesSays5UInt8VGvg",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt8]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt8",
                        "printedName": "Swift.UInt8",
                        "usr": "s:s5UInt8V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Share(im)setBytes:",
                "mangledName": "$s5Bayun5ShareC5bytesSays5UInt8VGvs",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5Bayun5ShareC5bytesSays5UInt8VGvM",
                "mangledName": "$s5Bayun5ShareC5bytesSays5UInt8VGvM",
                "moduleName": "Bayun",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(point:bytes:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Share",
                "printedName": "Bayun.Share",
                "usr": "c:@M@Bayun@objc(cs)Share"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Bayun@objc(cs)Share(im)initWithPoint:bytes:",
            "mangledName": "$s5Bayun5ShareC5point5bytesACs5UInt8V_SayAGGtcfc",
            "moduleName": "Bayun",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Share",
                "printedName": "Bayun.Share",
                "usr": "c:@M@Bayun@objc(cs)Share"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Bayun@objc(cs)Share(im)initWithData:error:",
            "mangledName": "$s5Bayun5ShareC4dataAC10Foundation4DataV_tKcfc",
            "moduleName": "Bayun",
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "data",
            "printedName": "data",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@Bayun@objc(cs)Share(py)data",
            "mangledName": "$s5Bayun5ShareC4data10Foundation4DataVvp",
            "moduleName": "Bayun",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "ObjC"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@Bayun@objc(cs)Share(im)data",
                "mangledName": "$s5Bayun5ShareC4data10Foundation4DataVvg",
                "moduleName": "Bayun",
                "isOpen": true,
                "declAttributes": [
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Share",
                "printedName": "Bayun.Share",
                "usr": "c:@M@Bayun@objc(cs)Share"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@Bayun@objc(cs)Share(im)init",
            "mangledName": "$s5Bayun5ShareCACycfc",
            "moduleName": "Bayun",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@Bayun@objc(cs)Share",
        "mangledName": "$s5Bayun5ShareC",
        "moduleName": "Bayun",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "ObjCMembers",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Bayun"
      },
      {
        "kind": "TypeDecl",
        "name": "DataError",
        "printedName": "DataError",
        "children": [
          {
            "kind": "Var",
            "name": "encoding",
            "printedName": "encoding",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.DataError.Type) -> Bayun.DataError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DataError",
                    "printedName": "Bayun.DataError",
                    "usr": "s:5Bayun9DataErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.DataError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DataError",
                        "printedName": "Bayun.DataError",
                        "usr": "s:5Bayun9DataErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun9DataErrorO8encodingyA2CmF",
            "mangledName": "$s5Bayun9DataErrorO8encodingyA2CmF",
            "moduleName": "Bayun",
            "fixedbinaryorder": 0
          },
          {
            "kind": "Var",
            "name": "cryptoRandom",
            "printedName": "cryptoRandom",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.DataError.Type) -> Bayun.DataError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DataError",
                    "printedName": "Bayun.DataError",
                    "usr": "s:5Bayun9DataErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.DataError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DataError",
                        "printedName": "Bayun.DataError",
                        "usr": "s:5Bayun9DataErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun9DataErrorO12cryptoRandomyA2CmF",
            "mangledName": "$s5Bayun9DataErrorO12cryptoRandomyA2CmF",
            "moduleName": "Bayun",
            "fixedbinaryorder": 1
          },
          {
            "kind": "Var",
            "name": "range",
            "printedName": "range",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.DataError.Type) -> (Swift.Range<Swift.Int>) -> Bayun.DataError",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Range<Swift.Int>) -> Bayun.DataError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DataError",
                        "printedName": "Bayun.DataError",
                        "usr": "s:5Bayun9DataErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Range",
                        "printedName": "Swift.Range<Swift.Int>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ],
                        "usr": "s:Sn"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.DataError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DataError",
                        "printedName": "Bayun.DataError",
                        "usr": "s:5Bayun9DataErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun9DataErrorO5rangeyACSnySiGcACmF",
            "mangledName": "$s5Bayun9DataErrorO5rangeyACSnySiGcACmF",
            "moduleName": "Bayun",
            "fixedbinaryorder": 2
          },
          {
            "kind": "Var",
            "name": "utfEncoding",
            "printedName": "utfEncoding",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Bayun.DataError.Type) -> Bayun.DataError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DataError",
                    "printedName": "Bayun.DataError",
                    "usr": "s:5Bayun9DataErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "Bayun.DataError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DataError",
                        "printedName": "Bayun.DataError",
                        "usr": "s:5Bayun9DataErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5Bayun9DataErrorO11utfEncodingyA2CmF",
            "mangledName": "$s5Bayun9DataErrorO11utfEncodingyA2CmF",
            "moduleName": "Bayun",
            "fixedbinaryorder": 3
          }
        ],
        "declKind": "Enum",
        "usr": "s:5Bayun9DataErrorO",
        "mangledName": "$s5Bayun9DataErrorO",
        "moduleName": "Bayun",
        "isEnumExhaustive": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Array",
        "printedName": "Array",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bytes:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[τ_0_0]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sa"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:Sa5BayunAA5GF256VRszlE5bytesSayACGSays5UInt8VG_tcfc",
            "mangledName": "$sSa5BayunAA5GF256VRszlE5bytesSayACGSays5UInt8VG_tcfc",
            "moduleName": "Bayun",
            "genericSig": "<τ_0_0 where τ_0_0 == Bayun.GF256>",
            "sugared_genericSig": "<Element where Element == Bayun.GF256>",
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:Sa",
        "mangledName": "$sSa",
        "moduleName": "Swift",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<Element>",
        "declAttributes": [
          "EagerMove",
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "_DestructorSafeContainer",
            "printedName": "_DestructorSafeContainer",
            "usr": "s:s24_DestructorSafeContainerP",
            "mangledName": "$ss24_DestructorSafeContainerP"
          },
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "_ArrayProtocol",
            "printedName": "_ArrayProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Buffer",
                "printedName": "_Buffer",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "_ArrayBuffer",
                    "printedName": "Swift._ArrayBuffer<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s12_ArrayBufferV"
                  }
                ]
              }
            ],
            "usr": "s:s14_ArrayProtocolP",
            "mangledName": "$ss14_ArrayProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RandomAccessCollection",
            "printedName": "RandomAccessCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sk",
            "mangledName": "$sSk"
          },
          {
            "kind": "Conformance",
            "name": "MutableCollection",
            "printedName": "MutableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              }
            ],
            "usr": "s:SM",
            "mangledName": "$sSM"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IndexingIterator",
                    "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[τ_0_0]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s16IndexingIteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IndexingIterator",
                    "printedName": "Swift.IndexingIterator<[τ_0_0]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[τ_0_0]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "GenericTypeParam",
                            "printedName": "τ_0_0"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s16IndexingIteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByArrayLiteral",
            "printedName": "ExpressibleByArrayLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ArrayLiteralElement",
                "printedName": "ArrayLiteralElement",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ]
              }
            ],
            "usr": "s:s25ExpressibleByArrayLiteralP",
            "mangledName": "$ss25ExpressibleByArrayLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ArraySlice",
                    "printedName": "Swift.ArraySlice<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:s10ArraySliceV"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "_HasContiguousBytes",
            "printedName": "_HasContiguousBytes",
            "usr": "s:s19_HasContiguousBytesP",
            "mangledName": "$ss19_HasContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSArray",
                    "printedName": "Foundation.NSArray",
                    "usr": "c:objc(cs)NSArray"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "ContiguousBytes",
            "printedName": "ContiguousBytes",
            "usr": "s:10Foundation15ContiguousBytesP",
            "mangledName": "$s10Foundation15ContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "EncodableWithConfiguration",
            "printedName": "EncodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "EncodingConfiguration",
                "printedName": "EncodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.EncodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26EncodableWithConfigurationP",
            "mangledName": "$s10Foundation26EncodableWithConfigurationP"
          },
          {
            "kind": "Conformance",
            "name": "DecodableWithConfiguration",
            "printedName": "DecodableWithConfiguration",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "DecodingConfiguration",
                "printedName": "DecodingConfiguration",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DependentMember",
                    "printedName": "τ_0_0.DecodingConfiguration"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation26DecodableWithConfigurationP",
            "mangledName": "$s10Foundation26DecodableWithConfigurationP"
          },
          {
            "kind": "Conformance",
            "name": "DataProtocol",
            "printedName": "DataProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Regions",
                "printedName": "Regions",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "CollectionOfOne",
                    "printedName": "Swift.CollectionOfOne<[Swift.UInt8]>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[Swift.UInt8]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "UInt8",
                            "printedName": "Swift.UInt8",
                            "usr": "s:s5UInt8V"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:s15CollectionOfOneV"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation12DataProtocolP",
            "mangledName": "$s10Foundation12DataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "MutableDataProtocol",
            "printedName": "MutableDataProtocol",
            "usr": "s:10Foundation19MutableDataProtocolP",
            "mangledName": "$s10Foundation19MutableDataProtocolP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt8",
        "printedName": "UInt8",
        "children": [
          {
            "kind": "Var",
            "name": "hex",
            "printedName": "hex",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:s5UInt8V5BayunE3hexSSvp",
            "mangledName": "$ss5UInt8V5BayunE3hexSSvp",
            "moduleName": "Bayun",
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:s5UInt8V5BayunE3hexSSvg",
                "mangledName": "$ss5UInt8V5BayunE3hexSSvg",
                "moduleName": "Bayun",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5UInt8V",
        "mangledName": "$ss5UInt8V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt8.Words",
                    "usr": "s:s5UInt8V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_StringElement",
            "printedName": "_StringElement",
            "usr": "s:s14_StringElementP",
            "mangledName": "$ss14_StringElementP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int8",
                    "printedName": "Swift.Int8",
                    "usr": "s:s4Int8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt8.SIMD2Storage",
                    "usr": "s:s5UInt8V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt8.SIMD4Storage",
                    "usr": "s:s5UInt8V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt8.SIMD8Storage",
                    "usr": "s:s5UInt8V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt8.SIMD16Storage",
                    "usr": "s:s5UInt8V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt8.SIMD32Storage",
                    "usr": "s:s5UInt8V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt8.SIMD64Storage",
                    "usr": "s:s5UInt8V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "BitwiseCopyable",
            "printedName": "BitwiseCopyable",
            "usr": "s:s15BitwiseCopyableP",
            "mangledName": "$ss15BitwiseCopyableP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Data",
        "printedName": "Data",
        "children": [
          {
            "kind": "Function",
            "name": "random",
            "printedName": "random(size:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:10Foundation4DataV5BayunE6random4sizeACSi_tKFZ",
            "mangledName": "$s10Foundation4DataV5BayunE6random4sizeACSi_tKFZ",
            "moduleName": "Bayun",
            "static": true,
            "isFromExtension": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "utf8String",
            "printedName": "utf8String()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:10Foundation4DataV5BayunE10utf8StringSSyKF",
            "mangledName": "$s10Foundation4DataV5BayunE10utf8StringSSyKF",
            "moduleName": "Bayun",
            "isFromExtension": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "bytes",
            "printedName": "bytes",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt8]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:10Foundation4DataV5BayunE5bytesSays5UInt8VGvp",
            "mangledName": "$s10Foundation4DataV5BayunE5bytesSays5UInt8VGvp",
            "moduleName": "Bayun",
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt8]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt8",
                        "printedName": "Swift.UInt8",
                        "usr": "s:s5UInt8V"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:10Foundation4DataV5BayunE5bytesSays5UInt8VGvg",
                "mangledName": "$s10Foundation4DataV5BayunE5bytesSays5UInt8VGvg",
                "moduleName": "Bayun",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "toBase64",
            "printedName": "toBase64(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:10Foundation4DataV5BayunE8toBase64ySSSbF",
            "mangledName": "$s10Foundation4DataV5BayunE8toBase64ySSSbF",
            "moduleName": "Bayun",
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:10Foundation4DataV",
        "mangledName": "$s10Foundation4DataV",
        "moduleName": "Foundation",
        "intro_Macosx": "10.10",
        "intro_iOS": "8.0",
        "intro_tvOS": "9.0",
        "intro_watchOS": "2.0",
        "declAttributes": [
          "Frozen",
          "Available",
          "Available",
          "Available",
          "Available"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RandomAccessCollection",
            "printedName": "RandomAccessCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sk",
            "mangledName": "$sSk"
          },
          {
            "kind": "Conformance",
            "name": "MutableCollection",
            "printedName": "MutableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              }
            ],
            "usr": "s:SM",
            "mangledName": "$sSM"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "MutableDataProtocol",
            "printedName": "MutableDataProtocol",
            "usr": "s:10Foundation19MutableDataProtocolP",
            "mangledName": "$s10Foundation19MutableDataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "ContiguousBytes",
            "printedName": "ContiguousBytes",
            "usr": "s:10Foundation15ContiguousBytesP",
            "mangledName": "$s10Foundation15ContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Foundation.Data.Iterator",
                    "usr": "s:10Foundation4DataV8IteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Range",
                    "printedName": "Swift.Range<Swift.Int>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sn"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "DataProtocol",
            "printedName": "DataProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Regions",
                "printedName": "Regions",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "CollectionOfOne",
                    "printedName": "Swift.CollectionOfOne<Foundation.Data>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:s15CollectionOfOneV"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation12DataProtocolP",
            "mangledName": "$s10Foundation12DataProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Foundation.Data.Iterator",
                    "usr": "s:10Foundation4DataV8IteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "ReferenceConvertible",
            "printedName": "ReferenceConvertible",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ReferenceType",
                "printedName": "ReferenceType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSData",
                    "printedName": "Foundation.NSData",
                    "usr": "c:objc(cs)NSData"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation20ReferenceConvertibleP",
            "mangledName": "$s10Foundation20ReferenceConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSData",
                    "printedName": "Foundation.NSData",
                    "usr": "c:objc(cs)NSData"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "String",
        "printedName": "String",
        "children": [
          {
            "kind": "Function",
            "name": "fromBase64",
            "printedName": "fromBase64()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:SS5BayunE10fromBase6410Foundation4DataVyKF",
            "mangledName": "$sSS5BayunE10fromBase6410Foundation4DataVyKF",
            "moduleName": "Bayun",
            "isFromExtension": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:SS",
        "mangledName": "$sSS",
        "moduleName": "Swift",
        "declAttributes": [
          "EagerMove",
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Copyable",
            "printedName": "Copyable",
            "usr": "s:s8CopyableP",
            "mangledName": "$ss8CopyableP"
          },
          {
            "kind": "Conformance",
            "name": "Escapable",
            "printedName": "Escapable",
            "usr": "s:s9EscapableP",
            "mangledName": "$ss9EscapableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CodingKeyRepresentable",
            "printedName": "CodingKeyRepresentable",
            "usr": "s:s22CodingKeyRepresentableP",
            "mangledName": "$ss22CodingKeyRepresentableP"
          },
          {
            "kind": "Conformance",
            "name": "_HasContiguousBytes",
            "printedName": "_HasContiguousBytes",
            "usr": "s:s19_HasContiguousBytesP",
            "mangledName": "$ss19_HasContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStream",
            "printedName": "TextOutputStream",
            "usr": "s:s16TextOutputStreamP",
            "mangledName": "$ss16TextOutputStreamP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStreamable",
            "printedName": "TextOutputStreamable",
            "usr": "s:s20TextOutputStreamableP",
            "mangledName": "$ss20TextOutputStreamableP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "printedName": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "usr": "s:s41_ExpressibleByBuiltinUnicodeScalarLiteralP",
            "mangledName": "$ss41_ExpressibleByBuiltinUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "printedName": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "usr": "s:s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinStringLiteral",
            "printedName": "_ExpressibleByBuiltinStringLiteral",
            "usr": "s:s34_ExpressibleByBuiltinStringLiteralP",
            "mangledName": "$ss34_ExpressibleByBuiltinStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringLiteral",
            "printedName": "ExpressibleByStringLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringLiteralType",
                "printedName": "StringLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s26ExpressibleByStringLiteralP",
            "mangledName": "$ss26ExpressibleByStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByExtendedGraphemeClusterLiteral",
            "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ExtendedGraphemeClusterLiteralType",
                "printedName": "ExtendedGraphemeClusterLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByUnicodeScalarLiteral",
            "printedName": "ExpressibleByUnicodeScalarLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarLiteralType",
                "printedName": "UnicodeScalarLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
            "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "StringProtocol",
            "printedName": "StringProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UTF8View",
                "printedName": "UTF8View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF8View",
                    "printedName": "Swift.String.UTF8View",
                    "usr": "s:SS8UTF8ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UTF16View",
                "printedName": "UTF16View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF16View",
                    "printedName": "Swift.String.UTF16View",
                    "usr": "s:SS9UTF16ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarView",
                "printedName": "UnicodeScalarView",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UnicodeScalarView",
                    "printedName": "Swift.String.UnicodeScalarView",
                    "usr": "s:SS17UnicodeScalarViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sy",
            "mangledName": "$sSy"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringInterpolation",
            "printedName": "ExpressibleByStringInterpolation",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringInterpolation",
                "printedName": "StringInterpolation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultStringInterpolation",
                    "printedName": "Swift.DefaultStringInterpolation",
                    "usr": "s:s26DefaultStringInterpolationV"
                  }
                ]
              }
            ],
            "usr": "s:s32ExpressibleByStringInterpolationP",
            "mangledName": "$ss32ExpressibleByStringInterpolationP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "MirrorPath",
            "printedName": "MirrorPath",
            "usr": "s:s10MirrorPathP",
            "mangledName": "$ss10MirrorPathP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSString",
                    "printedName": "Foundation.NSString",
                    "usr": "c:objc(cs)NSString"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/varun\/Documents\/Projects\/Bayun\/bayun\/BayunSDK\/iOS\/Bayun\/Classes\/SecretShare\/Util.swift",
      "kind": "BooleanLiteral",
      "offset": 982,
      "length": 5,
      "value": "false"
    }
  ]
}